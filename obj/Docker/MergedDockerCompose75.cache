name: dockercompose8783296346015927494
services:
  mongo:
    container_name: mongo
    image: mongo
    networks:
      default: null
    ports:
    - mode: ingress
      target: 27017
      published: "27017"
      protocol: tcp
    volumes:
    - type: volume
      source: mongodbdata
      target: /data/db
      volume: {}
  mongo-express:
    depends_on:
      mongo:
        condition: service_started
    environment:
      ME_CONFIG_BASICAUTH: "false"
      ME_CONFIG_MONGODB_PORT: "27017"
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_URL: mongodb://mongo:27017/
    image: mongo-express
    networks:
      default: null
    ports:
    - mode: ingress
      target: 8081
      published: "8081"
      protocol: tcp
  nginx:
    depends_on:
      play.frontend:
        condition: service_started
    image: nginx:stable-alpine
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "80"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Workspace\NetMicroservicesBasics\source_code\nginx\default.conf
      target: /etc/nginx/conf.d/default.conf
      bind:
        create_host_path: true
  play.catalog.service:
    build:
      context: C:\Workspace\NetMicroservicesBasics\source_code
      dockerfile: Play.Catalog/src/Play.Catalog.Service/Dockerfile
    container_name: catalog-service
    depends_on:
      mongo:
        condition: service_started
      rabbitmq:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
    image: playcatalogservice
    networks:
      default: null
    ports:
    - mode: ingress
      target: 8080
      published: "5000"
      protocol: tcp
    - mode: ingress
      target: 8081
      published: "5001"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Workspace\NetMicroservicesBasics\source_code\UserSecrets
      target: /home/app/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Workspace\NetMicroservicesBasics\source_code\Https
      target: /home/app/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  play.frontend:
    build:
      context: C:\Workspace\NetMicroservicesBasics\source_code
      dockerfile: Play.Frontend/Dockerfile
    container_name: frontend-service
    depends_on:
      mongo:
        condition: service_started
      play.catalog.service:
        condition: service_started
      play.inventory.service:
        condition: service_started
      rabbitmq:
        condition: service_started
    image: play.frontend
    networks:
      default: null
    ports:
    - mode: ingress
      target: 3000
      published: "3000"
      protocol: tcp
  play.inventory.service:
    build:
      context: C:\Workspace\NetMicroservicesBasics\source_code
      dockerfile: Play.Inventory/src/Play.Inventory.Service/Dockerfile
    container_name: inventory-service
    depends_on:
      mongo:
        condition: service_started
      play.catalog.service:
        condition: service_started
      rabbitmq:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
    image: playinventoryservice
    networks:
      default: null
    ports:
    - mode: ingress
      target: 8080
      published: "5002"
      protocol: tcp
    - mode: ingress
      target: 8081
      published: "5003"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Workspace\NetMicroservicesBasics\source_code\UserSecrets
      target: /home/app/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Workspace\NetMicroservicesBasics\source_code\Https
      target: /home/app/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  rabbitmq:
    container_name: rabbitmq
    depends_on:
      mongo:
        condition: service_started
    hostname: rabbitmq
    image: rabbitmq:management
    networks:
      default: null
    ports:
    - mode: ingress
      target: 5672
      published: "5672"
      protocol: tcp
    - mode: ingress
      target: 15672
      published: "15672"
      protocol: tcp
    volumes:
    - type: volume
      source: rabbitmqdata
      target: /var/lib/rabbitmq
      volume: {}
networks:
  default:
    name: dockercompose8783296346015927494_default
volumes:
  mongodbdata:
    name: dockercompose8783296346015927494_mongodbdata
  rabbitmqdata:
    name: dockercompose8783296346015927494_rabbitmqdata