name: dockercompose8783296346015927494
services:
  mongo:
    container_name: mongo
    image: mongo
    networks:
      default: null
    ports:
      - mode: ingress
        target: 27017
        published: "27017"
        protocol: tcp
    volumes:
      - type: volume
        source: mongodbdata
        target: /data/db
        volume: {}
  play.catalog.service:
    build:
      context: C:\Workspace\NetMicroservicesBasics\source_code
      dockerfile: Play.Catalog/src/Play.Catalog.Service/Dockerfile
    container_name: catalog-service
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
    image: playcatalogservice
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        published: "5000"
        protocol: tcp
      - mode: ingress
        target: 8081
        published: "5001"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\olama\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\olama\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  play.frontend:
    build:
      context: C:\Workspace\NetMicroservicesBasics\source_code
      dockerfile: Play.FrontEnd/Dockerfile
    container_name: frontend-service
    image: play.frontend
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "80"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Workspace\NetMicroservicesBasics\source_code\frontend\src
        target: /app/src
        bind:
          create_host_path: true
      - type: bind
        source: C:\Workspace\NetMicroservicesBasics\source_code\frontend\index.html
        target: /app/index.html
        bind:
          create_host_path: true
  play.inventory.service:
    build:
      context: C:\Workspace\NetMicroservicesBasics\source_code
      dockerfile: Play.Inventory/src/Play.Inventory.Service/Dockerfile
    container_name: inventory-service
    depends_on:
      play.catalog.service:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
    image: playinventoryservice
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        published: "5002"
        protocol: tcp
      - mode: ingress
        target: 8081
        published: "5003"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\olama\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\olama\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  rabbitmq:
    container_name: rabbitmq
    hostname: rabbitmq
    image: rabbitmq:management
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5672
        published: "5672"
        protocol: tcp
      - mode: ingress
        target: 15672
        published: "15672"
        protocol: tcp
    volumes:
      - type: volume
        source: rabbitmqdata
        target: /var/lib/rabbitmq
        volume: {}
networks:
  default:
    name: dockercompose8783296346015927494_default
volumes:
  mongodbdata:
    name: dockercompose8783296346015927494_mongodbdata
  rabbitmqdata:
    name: dockercompose8783296346015927494_rabbitmqdata